#定义开启的用户，在编译rpm的时候已经设置，此处可以忽略
#user  nobody;

#nginx 启动内核的进程数，和服务器内核数相关
#复制此命令可以查看服务器内核数[lscpu | awk  '/^CPU\(s\)/{print $2}']
worker_processes  1;

#定义error_log的存放位置
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

#每个进程可以处理的最大文件数，和服务器的最大文件打开数相关
events {
    worker_connections  1024;
}

#设置nginx的网页访问
http {
    include       mime.types;
	#nginx 的默认文件类型
    default_type  application/octet-stream;
	#nginx 的日志格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
	
 	#是否采用sendfile进行复制，sendfile复制数据是内核级别完成的，速度快
    sendfile        on;
	
    #开启后服务器的响应头部信息产生独立的数据包发送，即一个响应信息一个包
    #tcp_nopush     on;
    #keepalive_timeout  0;
    #保持连接的超时时间
    keepalive_timeout  65;
	server_tokens off;
	upstream webs {
		server 192.168.1.10:80 weight=1 max_fails=2 fail_timeout=20;
		server 192.168.1.20:80 weight=1 max_fails=2 fail_timeout=20;
	
	}
	
    server {
	 	#默认的端口号和域名的设置
        listen       80;
        server_name  www.example.com;
		#编码格式
        charset utf-8;
		
		location / {
			proxy_pass http://webs;
		}
        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location ~ /\.ht {
            deny  all;
        }
    }
}
stream {

	upstream myssh {
		server 192.168.4.10:22;
		server 192.168.4.20:22;
	}
	
	server {
		listen 47372;
		proxy_connect_timeout 1s;
		proxy_timeout 3s;
		proxy_pass myssh;
	
	}


}
